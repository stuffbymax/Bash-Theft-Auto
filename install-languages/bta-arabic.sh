#Bash-Theft-Auto الموسيقى والمؤثرات الصوتية © 2024 بواسطة stuffbymax - Martin Petik مرخصة بموجب CC BY 4.0
#الترجمة بواسطة الذكاء الاصطناعي
#الإصدار 2.0.2
#https://creativecommons.org/licenses/by/4.0/
#!/bin/bash
BASEDIR="$(dirname "$(realpath "$0")")"
# --- 0. المتغيرات العامة ---
player_name="" # اسم اللاعب
location=""     # الموقع
cash=0         # المال
health=0       # الصحة
declare -a guns  # المصفوفة: الأسلحة
declare -a items # المصفوفة: العناصر
declare -A drugs # القاموس الترابطي: المخدرات
declare -A skills # القاموس الترابطي: المهارات
body_armor_equipped=false # الدرع الواقي للجسم مُجهز؟
SAVE_DIR="saves" # دليل الحفظ
declare -A gun_attributes # القاموس الترابطي: خصائص الأسلحة

gun_attributes=(
	["Pistol"]="success_bonus=5"    # مسدس: مكافأة النجاح = 5
	["Shotgun"]="success_bonus=10"   # بندقية: مكافأة النجاح = 10
	["SMG"]="success_bonus=15"       # رشاش: مكافأة النجاح = 15
	["Rifle"]="success_bonus=20"     # بندقية: مكافأة النجاح = 20
	["Sniper"]="success_bonus=25"    # قناص: مكافأة النجاح = 25
)

# --- إعداد المؤثرات الصوتية ---
sfx_dir="sfx"  # دليل المؤثرات الصوتية

#mpg123
# دالة لتشغيل المؤثرات الصوتية (باستخدام mpg123)
play_sfx_mpg() {
	local sound_file="$sfx_dir/$1.mp3" # ملف الصوت
	if [[ -f "$sound_file" ]]; then # إذا كان الملف موجودًا
		mpg123 -q "$sound_file" & # تشغيل الصوت بصمت في الخلفية
		return 0  # إشارة إلى النجاح
	else
		echo "ملف الصوت '$sound_file' غير موجود!" # ملف الصوت '$sound_file' غير موجود!
		return 1  # إشارة إلى الفشل
	fi
}

# --- 1. تحميل المكونات الإضافية ---
plugin_dir="plugins" # دليل المكونات الإضافية

if [[ -d "$plugin_dir" ]]; then # إذا كان دليل المكونات الإضافية موجودًا
	while IFS= read -r -d $'\0' plugin; do # قراءة المكونات الإضافية واحدًا تلو الآخر
		[[ -f "$plugin" ]] && source "$plugin" # إذا كان المكون الإضافي ملفًا، قم بتحميله
	done < <(find "$plugin_dir" -maxdepth 1 -name "*.sh" -print0) # البحث عن ملفات .sh في دليل المكونات الإضافية
else
	echo "تحذير: دليل المكونات الإضافية '$plugin_dir' غير موجود." # تحذير: دليل المكونات الإضافية '$plugin_dir' غير موجود.
fi

# --- 3. الدوال ---

# مسح الشاشة وعرض معلومات اللعبة
clear_screen() {
clear # مسح الشاشة
printf "\e[93m=========================================\e[0m\n"
printf "\e[1;43m|        Bash theaft auto               |\e[0m\n" # باش ثيفت أوتو
printf "\e[93m=========================================\e[0m\n"
printf "اللاعب: %s   الموقع: %s\n" "$player_name" "$location" # اللاعب: %s   الموقع: %s
printf "المال: %d دولار      الصحة: %d%%\n" "$cash" "$health"   # المال: %d دولار      الصحة: %d%%
printf "\e[1;34m=========================================\e[0m\n"
printf "\e[1;44m|        صُنعت بواسطة stuffbymax             |\e[0m\n" # صُنعت بواسطة stuffbymax
printf "\e[1;34m=========================================\e[0m\n"
}

# --- حول ---
about_music_sfx() {
	clear_screen # مسح الشاشة
	echo -e "-----------------------------------------"
	echo "|  حول الموسيقى والمؤثرات الصوتية    |" # |  حول الموسيقى والمؤثرات الصوتية    |
	echo "-----------------------------------------"
	echo ""
	echo "الموسيقى وبعض المؤثرات الصوتية في هذه اللعبة" # الموسيقى وبعض المؤثرات الصوتية في هذه اللعبة
	echo "تم إنشاؤها بواسطة stuffbymax - Martin Petik." # تم إنشاؤها بواسطة stuffbymax - Martin Petik.
	echo ""
	echo "مرخصة بموجب رخصة المشاع الإبداعي" # مرخصة بموجب رخصة المشاع الإبداعي
	echo "الإصدار 4.0 الدولية - النسبة للمؤلف" # الإصدار 4.0 الدولية - النسبة للمؤلف
	echo "(CC BY 4.0) :الرخصة" # (CC BY 4.0) :الرخصة
	echo "https://creativecommons.org/licenses/by/4.0/"
	echo ""
	echo "هذا يعني أنك حر في استخدامها في" # هذا يعني أنك حر في استخدامها في
	echo "مشاريعك الخاصة، حتى تجارياً،" # مشاريعك الخاصة، حتى تجارياً،
	echo "طالما أنك تقدم الإسناد المناسب." # طالما أنك تقدم الإسناد المناسب.
	echo ""
	echo "يرجى نسبة الموسيقى والمؤثرات الصوتية" # يرجى نسبة الموسيقى والمؤثرات الصوتية
	echo "مع البيان التالي:" # مع البيان التالي:
	echo ""
	echo "'الموسيقى والمؤثرات الصوتية © 2024 بواسطة" # 'الموسيقى والمؤثرات الصوتية © 2024 بواسطة
	echo "stuffbymax - Martin Petik، مرخصة بموجب" # stuffbymax - Martin Petik، مرخصة بموجب
	echo "CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)'" # CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)'
	echo ""
	echo "لمزيد من المعلومات حول stuffbymax -" # لمزيد من المعلومات حول stuffbymax -
	echo "Martin Petik وعملي، يرجى زيارة:" # Martin Petik وعملي، يرجى زيارة:
	echo "https://stuffbymax.me/ أو https://stuffbymax.me/wiki-blogs"
	echo ""
	echo "-----------------------------------------"
	echo "|  رخصة الكود                         |" # |  رخصة الكود                         |
	echo "-----------------------------------------"
	echo ""
	echo "كود هذه اللعبة مرخص بموجب رخصة MIT." # كود هذه اللعبة مرخص بموجب رخصة MIT.
	echo "حقوق النشر (c) 2024 stuffbymax" # حقوق النشر (c) 2024 stuffbymax
	echo "أنت حر في استخدام الكود وتعديله وتوزيعه" # أنت حر في استخدام الكود وتعديله وتوزيعه
	echo "مع الإسناد المناسب." # مع الإسناد المناسب.
	echo ""
	echo "للحصول على النص الكامل للرخصة، تفضل بزيارة:" # للحصول على النص الكامل للرخصة، تفضل بزيارة:
	echo "https://github.com/stuffbymax/Bash-Theft-Auto/blob/main/LICENSE"
	echo ""
	echo "شكراً للعبكم!" # شكراً للعبكم!
	read -r -p "اضغط مفتاح الإدخال للعودة إلى القائمة الرئيسية..." # اضغط مفتاح الإدخال للعودة إلى القائمة الرئيسية...
}

# دالة للتحقق مما إذا كان اللاعب على قيد الحياة
check_health() {
	if (( health <= 0 )); then # إذا كانت الصحة أقل من أو تساوي 0
		echo "لم يتبق لديك صحة! يتم نقلك إلى المستشفى..." # لم يتبق لديك صحة! يتم نقلك إلى المستشفى...
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		hospitalize_player # استدعاء دالة إدخال اللاعب إلى المستشفى
	fi
}

# دالة للسفر إلى موقع جديد
travel_to() {
	local travel_cost="$1"    # تكلفة السفر
	local new_location="$2"   # الموقع الجديد

	if (( cash >= travel_cost )); then # إذا كان المال كافيًا لتغطية تكلفة السفر
		echo "جاري السفر إلى $new_location..." # جاري السفر إلى $new_location...
		play_sfx_mpg "air" # تشغيل مؤثر صوتي "air"

		# --- رسوم متحركة للسفر الجوي (استدعاء مكون إضافي) ---
		air_travel_animation # استدعاء الدالة في animation.sh
		# --- نهاية الرسوم المتحركة للسفر الجوي ---

		cash=$((cash - travel_cost)) # خصم تكلفة السفر من المال
		# إزالة مطالبة الضغط على مفتاح الإدخال هنا، فهي غير ضرورية مع الرسوم المتحركة

		location="$new_location" # تحديث الموقع إلى الموقع الجديد
		clear_screen # مسح الشاشة
		echo "لقد وصلت إلى $new_location." # لقد وصلت إلى $new_location.
	else
		echo "ليس لديك مال كافٍ للسفر إلى $new_location." # ليس لديك مال كافٍ للسفر إلى $new_location.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		clear_screen # مسح الشاشة
	fi
}

# دالة لشراء الأسلحة
buy_guns() {
	local gun_choice # اختيار السلاح
	clear_screen # مسح الشاشة
	echo "متجر الأسلحة - اختر سلاحًا للشراء:" # متجر الأسلحة - اختر سلاحًا للشراء:
	echo "1. مسدس (100$)"   # 1. مسدس (100$)
	echo "2. بندقية (250$)"  # 2. بندقية (250$)
	echo "3. رشاش (500$)"      # 3. رشاش (500$)
	echo "4. بندقية (750$)"    # 4. بندقية (750$)
	echo "5. قناص (1000$)"  # 5. قناص (1000$)
	echo "6. العودة إلى القائمة الرئيسية" # 6. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك (رقم): " gun_choice # أدخل اختيارك (رقم):

	[[ ! "$gun_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم من القائمة." # إدخال غير صالح. يرجى إدخال رقم من القائمة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}

	case "$gun_choice" in # بناءً على اختيار السلاح
		1) buy_item "مسدس" 100;; # شراء مسدس مقابل 100 دولار
		2) buy_item "بندقية" 250;; # شراء بندقية مقابل 250 دولار
		3) buy_item "رشاش" 500;;   # شراء رشاش مقابل 500 دولار
		4) buy_item "بندقية" 750;; # شراء بندقية (rifle) مقابل 750 دولار
		5) buy_item "قناص" 1000;; # شراء قناص مقابل 1000 دولار
		6) clear_screen;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac
}

# دالة مساعدة لشراء العناصر
buy_item() {
	local item_name="$1" # اسم العنصر
	local item_cost="$2" # تكلفة العنصر
	play_sfx_mpg "cash_register" # تشغيل مؤثر صوتي "cash_register"
	buy_animation # تشغيل رسوم متحركة للشراء

	if (( cash >= item_cost )); then # إذا كان المال كافيًا للشراء
		cash=$((cash - item_cost)) # خصم تكلفة العنصر من المال
		guns+=("$item_name") # إضافة العنصر (السلاح) إلى قائمة الأسلحة
		echo "لقد اشتريت $item_name." # لقد اشتريت $item_name.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else
		echo "ليس لديك مال كافٍ لشراء $item_name." # ليس لديك مال كافٍ لشراء $item_name.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لعرض المخزون
show_inventory() {
	clear_screen # مسح الشاشة
	echo "مخزونك:" # مخزونك:
	printf "المال: %d دولار\n" "$cash" # المال: %d دولار
	printf "الصحة: %d%%\n" "$health" # الصحة: %d%%
	printf "الأسلحة: %s\n" "${guns[*]}" # الأسلحة: %s
	printf "العناصر: %s\n" "${items[*]}" # العناصر: %s
	echo "المخدرات: " # المخدرات:
	local IFS=$'\n' # تغيير فاصل الحقول إلى سطر جديد
	for drug in "${!drugs[@]}"; do # تكرار عبر المخدرات في القاموس الترابطي
		printf "  - %s: %s\n" "$drug" "${drugs[$drug]}" #   - %s: %s (اسم المخدر: الكمية)
	done
	IFS=$' \t\n' # استعادة فاصل الحقول الافتراضي

	echo "المهارات:" # المهارات:
	local IFS=$'\n' # تغيير فاصل الحقول إلى سطر جديد
	for skill in "${!skills[@]}"; do # تكرار عبر المهارات في القاموس الترابطي
		printf "  - %s: %s\n" "$skill" "${skills[$skill]}" #   - %s: %s (اسم المهارة: المستوى)
	done
	IFS=$' \t\n' # استعادة فاصل الحقول الافتراضي
	read -r -p "اضغط مفتاح الإدخال للعودة إلى القائمة الرئيسية." # اضغط مفتاح الإدخال للعودة إلى القائمة الرئيسية.
}

# دالة للعمل (منطق مبسط)
work_job() {
	local job_type="$1" # نوع الوظيفة
	local earnings # الأرباح
	local min_earnings max_earnings # الحد الأدنى والحد الأقصى للأرباح
	local driving_skill=$((skills["driving"] * 5)) # مثال على استخدام المهارات: مهارة القيادة

	case "$location" in # بناءً على الموقع
		"Los Santos") min_earnings=20; max_earnings=$((60 + driving_skill));; # لوس سانتوس
		"San Fierro") min_earnings=25; max_earnings=$((70 + driving_skill));; # سان فييرو
		"Las Venturas") min_earnings=30; max_earnings=$((90 + driving_skill));; # لاس فينتوراس
		"Vice City") min_earnings=15; max_earnings=$((50 + driving_skill));; # فايس سيتي
		"Liberty City") min_earnings=35; max_earnings=$((100 + driving_skill));; # ليبرتي سيتي
		*) min_earnings=10; max_earnings=$((40 + driving_skill));; # قيم افتراضية
	esac

	case "$job_type" in # بناءً على نوع الوظيفة
		"taxi") # سائق تاكسي
			earnings=$((RANDOM % (max_earnings - min_earnings + 1) + min_earnings)) # حساب الأرباح عشوائيًا ضمن النطاق
			play_sfx_mpg "taxi" # تشغيل مؤثر صوتي "taxi"
			working_animation # تشغيل رسوم متحركة للعمل
			;;
		"delivery") # سائق توصيل
			earnings=$((RANDOM % (max_earnings - min_earnings + 1) + min_earnings + 10)) # حساب الأرباح عشوائيًا ضمن النطاق + 10
			play_sfx_mpg "taxi" # تشغيل مؤثر صوتي "taxi"
			working_animation # تشغيل رسوم متحركة للعمل
			;;
		"mechanic") # ميكانيكي
			earnings=$((RANDOM % (max_earnings - min_earnings + 1) + min_earnings + 20)) # حساب الأرباح عشوائيًا ضمن النطاق + 20
			play_sfx_mpg "mechanic" # تشغيل مؤثر صوتي "mechanic"
			working_animation # تشغيل رسوم متحركة للعمل
			;;
		"security") # حارس أمن
			earnings=$((RANDOM % (max_earnings - min_earnings + 1) + min_earnings + 30)) # حساب الأرباح عشوائيًا ضمن النطاق + 30
			play_sfx_mpg "security" # تشغيل مؤثر صوتي "security"
			working_animation # تشغيل رسوم متحركة للعمل
			;;
		"performer") # فنان شارع
			earnings=$((RANDOM % (max_earnings - min_earnings + 1) + min_earnings - 20)) # حساب الأرباح عشوائيًا ضمن النطاق - 20
			play_sfx_mpg "street_performer" # تشغيل مؤثر صوتي "street_performer"
			working_animation # تشغيل رسوم متحركة للعمل
			;;
		*) echo "وظيفة غير صالحة"; return;; # وظيفة غير صالحة
	esac

	echo "أنت تعمل كسائق $job_type في $location..." # أنت تعمل كسائق $job_type في $location...
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...

	cash=$((cash + earnings)) # إضافة الأرباح إلى المال
	clear_screen # مسح الشاشة
	printf "لقد ربحت %d دولار. لديك الآن %d دولار.\n" "$earnings" "$cash" # لقد ربحت %d دولار. لديك الآن %d دولار.
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
}

# دالة لسباق الشوارع (دالة منفصلة)
street_race() {
	working_animation # تشغيل رسوم متحركة للعمل
	echo "أنت تشارك في سباق شوارع في $location..." # أنت تشارك في سباق شوارع في $location...
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	local winnings # المكاسب
	local damage # الضرر
	local driving_skill=$((skills["driving"] * 5)) # مهارة القيادة
	local win_chance=$((50 + driving_skill)) # فرصة الفوز (تتأثر بمهارة القيادة)

	if (( RANDOM % 100 < win_chance )); then # إذا فاز اللاعب
		winnings=$((RANDOM % 201 + 100)) # حساب المكاسب عشوائيًا
		cash=$((cash + winnings)) # إضافة المكاسب إلى المال
		damage=$((RANDOM % 21 + 10)) # حساب الضرر عشوائيًا
		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi
		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد فزت بسباق الشوارع وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.\n" "$winnings" "$damage" "$cash" "$health" # لقد فزت بسباق الشوارع وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.
		play_sfx_mpg "win" # تشغيل مؤثر صوتي "win"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else # إذا خسر اللاعب
		damage=$((RANDOM % 41 + 20)) # حساب الضرر عشوائيًا (أكثر إذا خسر)
		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi
		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد خسرت سباق الشوارع وتلقيت %d%% ضرر. لديك الآن %d%% صحة.\n" "$damage" "$health" # لقد خسرت سباق الشوارع وتلقيت %d%% ضرر. لديك الآن %d%% صحة.
		play_sfx_mpg "lose" # تشغيل مؤثر صوتي "lose"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لاستخدام الأسلحة في الوظائف - غير مستخدمة حاليًا في الوظائف، ولكن تم الاحتفاظ بها للاستخدام المحتمل في المستقبل.
use_guns() {
	if [[ " ${guns[*]} " == *" $1 "* ]]; then # إذا كان اللاعب يمتلك السلاح المحدد
		echo "لقد استخدمت $1 الخاص بك لهذه الوظيفة." # لقد استخدمت $1 الخاص بك لهذه الوظيفة.
		play_sfx_mpg "gun_shot" # تشغيل مؤثر صوتي "gun_shot"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else
		echo "ليس لديك $1. فشلت الوظيفة." # ليس لديك $1. فشلت الوظيفة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لزيارة المستشفى
visit_hospital() {
	local hospital_choice # اختيار خدمة المستشفى
	clear_screen # مسح الشاشة
	echo "خدمات المستشفى:" # خدمات المستشفى:
	echo "1. علاج أساسي (50$) - شفاء كامل" # 1. علاج أساسي (50$) - شفاء كامل
	echo "2. علاج متقدم (100$) - شفاء كامل + 10٪ زيادة في الصحة" # 2. علاج متقدم (100$) - شفاء كامل + 10٪ زيادة في الصحة
	echo "3. شراء حقيبة إسعافات أولية (30$) - شفاء 25٪ صحة" # 3. شراء حقيبة إسعافات أولية (30$) - شفاء 25٪ صحة
	echo "4. شراء درع واقي للجسم (75$) - تقليل الضرر بنسبة 50٪ في المواجهة التالية" # 4. شراء درع واقي للجسم (75$) - تقليل الضرر بنسبة 50٪ في المواجهة التالية
	echo "5. العودة إلى القائمة الرئيسية" # 5. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك (رقم): " hospital_choice # أدخل اختيارك (رقم):

	[[ ! "$hospital_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم من القائمة." # إدخال غير صالح. يرجى إدخال رقم من القائمة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}

	case "$hospital_choice" in # بناءً على اختيار خدمة المستشفى
		1) buy_hospital_item 50 "basic_treatment";; # شراء علاج أساسي مقابل 50 دولار
		2) buy_hospital_item 100 "advanced_treatment";; # شراء علاج متقدم مقابل 100 دولار
		3) buy_hospital_item 30 "health_pack";; # شراء حقيبة إسعافات أولية مقابل 30 دولار
		4) buy_hospital_item 75 "body_armor";; # شراء درع واقي للجسم مقابل 75 دولار
		5) clear_screen;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac
}

# دالة مساعدة لشراء عناصر المستشفى
buy_hospital_item() {
	local item_cost="$1" # تكلفة العنصر
	local item_type="$2" # نوع العنصر

	if (( cash >= item_cost )); then # إذا كان المال كافيًا للشراء
		cash=$((cash - item_cost)) # خصم تكلفة العنصر من المال
		case "$item_type" in # بناءً على نوع العنصر
			"basic_treatment") # علاج أساسي
				health=100 # استعادة الصحة إلى 100٪
				echo "لقد تلقيت علاجًا أساسيًا وشفيت تمامًا." # لقد تلقيت علاجًا أساسيًا وشفيت تمامًا.
				play_sfx_mpg "heal" # تشغيل مؤثر صوتي "heal"
				read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
				;;
			"advanced_treatment") # علاج متقدم
				health=$((health + 10)) # زيادة الصحة بنسبة 10٪
				(( health > 100 )) && health=100 # التأكد من أن الصحة لا تتجاوز 100٪
				echo "لقد تلقيت علاجًا متقدمًا وشفيت تمامًا مع زيادة في الصحة." # لقد تلقيت علاجًا متقدمًا وشفيت تمامًا مع زيادة في الصحة.
				play_sfx_mpg "heal" # تشغيل مؤثر صوتي "heal"
				read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
				;;
			"health_pack") # حقيبة إسعافات أولية
				items+=("حقيبة إسعافات أولية") # إضافة حقيبة الإسعافات الأولية إلى المخزون
				echo "لقد اشتريت حقيبة إسعافات أولية." # لقد اشتريت حقيبة إسعافات أولية.
				play_sfx_mpg "item_buy" # تشغيل مؤثر صوتي "item_buy"
				read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
				;;
			"body_armor") # درع واقي للجسم
				body_armor_equipped=true # تفعيل الدرع الواقي للجسم
				echo "لقد اشتريت درعًا واقيًا للجسم." # لقد اشتريت درعًا واقيًا للجسم.
				play_sfx_mpg "item_buy" # تشغيل مؤثر صوتي "item_buy"
				read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
				;;
		esac
	else
		echo "ليس لديك مال كافٍ لـ $item_type." # ليس لديك مال كافٍ لـ $item_type.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لسرقة متجر
rob_store() {
	robbing_animation # تشغيل رسوم متحركة للسطو
	echo "محاولة سرقة متجر في $location..." # محاولة سرقة متجر في $location...

	local stealth_skill=$((skills["stealth"] * 5)) # مهارة التخفي الأساسية
	local gun_bonus=0 # مكافأة السلاح (مبدئيًا 0)

	if (( ${#guns[@]} > 0 )); then # إذا كان اللاعب يمتلك أسلحة
		echo "هل تريد استخدام سلاح؟ (نعم/لا)" # هل تريد استخدام سلاح؟ (نعم/لا)
		read -r use_gun # قراءة إجابة اللاعب

	if [[ "$use_gun" == "y" || "$use_gun" == "Y" ]]; then # إذا اختار اللاعب استخدام سلاح
			echo "أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)" # أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)
			echo "الأسلحة المتاحة: ${guns[*]}" # الأسلحة المتاحة: ${guns[*]}
			read -r chosen_gun # قراءة اسم السلاح المختار

			# التحقق مما إذا كان اللاعب يمتلك هذا السلاح
			gun_found=false # السلاح غير موجود (مبدئيًا)
			for gun in "${guns[@]}"; do # تكرار عبر الأسلحة في المخزون
				if [[ "$gun" == "$chosen_gun" ]]; then # إذا تم العثور على السلاح المختار
					gun_found=true # السلاح موجود
					break # الخروج من الحلقة
				fi
			done

			if $gun_found; then # إذا تم العثور على السلاح
				echo "لقد استخدمت $chosen_gun!" # لقد استخدمت $chosen_gun!
				play_sfx_mpg "gun_shot"  # تشغيل مؤثر صوتي "gun_shot"

				# --- تطبيق مكافأة السلاح ---
				if [[ -v "gun_attributes[$chosen_gun]" ]]; then # إذا كانت هناك خصائص محددة للسلاح
					eval "${gun_attributes[$chosen_gun]}" # استخراج سلسلة الخصائص
					gun_bonus=$success_bonus # الحصول على مكافأة النجاح
					stealth_skill=$((stealth_skill + gun_bonus)) # تطبيق المكافأة على مهارة التخفي
					echo "يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%." # يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%.
				else
					echo "لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج)." # لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج).
				fi
				# --- نهاية مكافأة السلاح ---
			else
				echo "ليس لديك هذا السلاح!" # ليس لديك هذا السلاح!
			fi
		else
			echo "المتابعة بدون سلاح." # المتابعة بدون سلاح.
		fi
	else
		echo "ليس لديك أي أسلحة!" # ليس لديك أي أسلحة!
	fi

	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...

	local loot # الغنائم
	local damage # الضرر
	local fine # الغرامة
	if (( RANDOM % 100 < stealth_skill )); then # إذا نجحت السرقة (بناءً على مهارة التخفي)
		loot=$((RANDOM % 201 + 100)) # حساب الغنائم عشوائيًا
		cash=$((cash + loot)) # إضافة الغنائم إلى المال

		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi

		damage=$((RANDOM % 31 + 10)) # حساب الضرر عشوائيًا
		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد نجحت في سرقة المتجر وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.\n" "$loot" "$damage" "$cash" "$health" # لقد نجحت في سرقة المتجر وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.
		play_sfx_mpg "cash_register" # تشغيل مؤثر صوتي "cash_register"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else # إذا فشلت السرقة
		fine=$((RANDOM % 51 + 25)) # حساب الغرامة عشوائيًا
		cash=$((cash - fine)) # خصم الغرامة من المال
		clear_screen # مسح الشاشة
		printf "لقد تم القبض عليك وغُرمت %d دولار. لديك الآن %d دولار.\n" "$fine" "$cash" # لقد تم القبض عليك وغُرمت %d دولار. لديك الآن %d دولار.
		play_sfx_mpg "lose"   # تشغيل مؤثر صوتي "lose"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة للمشاركة في عملية سطو
heist() {
	heist_animation # تشغيل رسوم متحركة للسطو
	echo "التخطيط لعملية سطو في $location..." # التخطيط لعملية سطو في $location...

	local stealth_skill=$((skills["stealth"] * 5)) # مهارة التخفي الأساسية
	local gun_bonus=0 # مكافأة السلاح (مبدئيًا 0)

	if (( ${#guns[@]} > 0 )); then # إذا كان اللاعب يمتلك أسلحة
		echo "هل تريد استخدام سلاح؟ (نعم/لا)" # هل تريد استخدام سلاح؟ (نعم/لا)
		read -r use_gun # قراءة إجابة اللاعب

		if [[ "$use_gun" == "y" || "$use_gun" == "Y" ]]; then # إذا اختار اللاعب استخدام سلاح
			echo "أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)" # أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)
			echo "الأسلحة المتاحة: ${guns[*]}" # الأسلحة المتاحة: ${guns[*]}
			read -r chosen_gun # قراءة اسم السلاح المختار
			# التحقق مما إذا كان اللاعب يمتلك هذا السلاح
			gun_found=false # السلاح غير موجود (مبدئيًا)
			for gun in "${guns[@]}"; do # تكرار عبر الأسلحة في المخزون
				if [[ "$gun" == "$chosen_gun" ]]; then # إذا تم العثور على السلاح المختار
					gun_found=true # السلاح موجود
					break # الخروج من الحلقة
				fi
			done

			if $gun_found; then # إذا تم العثور على السلاح
				echo "لقد استخدمت $chosen_gun!" # لقد استخدمت $chosen_gun!
				play_sfx_mpg "gun_shot"  # تشغيل مؤثر صوتي "gun_shot"

				# --- منطق مكافأة السلاح ---
				if [[ -v "gun_attributes[$chosen_gun]" ]]; then # إذا كانت هناك خصائص محددة للسلاح
					eval "${gun_attributes[$chosen_gun]}" # استخراج سلسلة الخصائص
					gun_bonus=$success_bonus # الحصول على مكافأة النجاح
					stealth_skill=$((stealth_skill + gun_bonus)) # تطبيق المكافأة على مهارة التخفي
					echo "يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%." # يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%.
				else
					echo "لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج)." # لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج).
				fi
				# --- نهاية منطق مكافأة السلاح ---

			else
				echo "ليس لديك هذا السلاح!" # ليس لديك هذا السلاح!
			fi
		else
			echo "المتابعة بدون سلاح." # المتابعة بدون سلاح.
		fi
	else
		echo "ليس لديك أي أسلحة!" # ليس لديك أي أسلحة!
	fi

	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...

	local loot # الغنائم
	local damage # الضرر
	local fine # الغرامة
	if (( RANDOM % 100 < stealth_skill )); then # إذا نجحت عملية السطو (بناءً على مهارة التخفي)
		loot=$((RANDOM % 501 + 200)) # حساب الغنائم عشوائيًا
		cash=$((cash + loot)) # إضافة الغنائم إلى المال

		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi

		damage=$((RANDOM % 51 + 20)) # حساب الضرر عشوائيًا
		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "عملية السطو كانت ناجحة! لقد حصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.\n" "$loot" "$damage" "$cash" "$health" # عملية السطو كانت ناجحة! لقد حصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else # إذا فشلت عملية السطو
		fine=$((RANDOM % 101 + 50)) # حساب الغرامة عشوائيًا
		cash=$((cash - fine)) # خصم الغرامة من المال

		clear_screen # مسح الشاشة
		printf "فشلت عملية السطو وتم القبض عليك، وخسرت %d دولار. لديك الآن %d دولار.\n" "$fine" "$cash" # فشلت عملية السطو وتم القبض عليك، وخسرت %d دولار. لديك الآن %d دولار.
		play_sfx_mpg "lose"  # تشغيل مؤثر صوتي "lose"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لحروب العصابات
gang_war() {
	# التحقق مما إذا كان اللاعب يمتلك أي أسلحة
	if (( ${#guns[@]} == 0 )); then # إذا لم يكن لدى اللاعب أسلحة
		echo "لا يمكنك بدء حرب عصابات بدون سلاح!" # لا يمكنك بدء حرب عصابات بدون سلاح!
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	fi

	gang_war_animation # تشغيل رسوم متحركة لحرب العصابات
	echo "بدء حرب عصابات في $location..." # بدء حرب عصابات في $location...

	local strength_skill=$((skills["strength"] * 5)) # مهارة القوة الأساسية
	local gun_bonus=0 # مكافأة السلاح (مبدئيًا 0)

	if (( ${#guns[@]} > 0 )); then # إذا كان اللاعب يمتلك أسلحة
		echo "هل تريد استخدام سلاح؟ (نعم/لا)" # هل تريد استخدام سلاح؟ (نعم/لا)
		read -r use_gun # قراءة إجابة اللاعب

		if [[ "$use_gun" == "y" || "$use_gun" == "Y" ]]; then # إذا اختار اللاعب استخدام سلاح
			echo "أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)" # أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)
			echo "الأسلحة المتاحة: ${guns[*]}" # الأسلحة المتاحة: ${guns[*]}
			read -r chosen_gun # قراءة اسم السلاح المختار

			# التحقق مما إذا كان اللاعب يمتلك هذا السلاح
			gun_found=false # السلاح غير موجود (مبدئيًا)
			for gun in "${guns[@]}"; do # تكرار عبر الأسلحة في المخزون
				if [[ "$gun" == "$chosen_gun" ]]; then # إذا تم العثور على السلاح المختار
					gun_found=true # السلاح موجود
					break # الخروج من الحلقة
				fi
			done

			if $gun_found; then # إذا تم العثور على السلاح
				echo "لقد استخدمت $chosen_gun!" # لقد استخدمت $chosen_gun!
				play_sfx_mpg "gun_shot"  # تشغيل مؤثر صوتي "gun_shot"

				# --- منطق مكافأة السلاح ---
				if [[ -v "gun_attributes[$chosen_gun]" ]]; then # إذا كانت هناك خصائص محددة للسلاح
					eval "${gun_attributes[$chosen_gun]}" # استخراج سلسلة الخصائص
					gun_bonus=$success_bonus # الحصول على مكافأة النجاح
					strength_skill=$((strength_skill + gun_bonus)) # تطبيق المكافأة على مهارة القوة
					echo "يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%." # يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%.
				else
					echo "لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج)." # لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج).
				fi
				# --- نهاية منطق مكافأة السلاح ---

			else
				echo "ليس لديك هذا السلاح!" # ليس لديك هذا السلاح!
			fi
		else
			echo "المتابعة بدون سلاح." # المتابعة بدون سلاح.
		fi
	else
		echo "ليس لديك أي أسلحة!" # ليس لديك أي أسلحة!
	fi

	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...

	local loot # الغنائم
	local damage # الضرر
	local fine # الغرامة

	if (( RANDOM % 100 < strength_skill )); then # إذا فازت حرب العصابات (بناءً على مهارة القوة)
		loot=$((RANDOM % 301 + 100)) # حساب الغنائم عشوائيًا
		cash=$((cash + loot)) # إضافة الغنائم إلى المال

		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi

		damage=$((RANDOM % 51 + 30)) # حساب الضرر عشوائيًا
		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد فزت بحرب العصابات وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.\n" "$loot" "$damage" "$cash" "$health" # لقد فزت بحرب العصابات وحصلت على %d دولار، لكن خسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.
		play_sfx_mpg "win" # تشغيل مؤثر صوتي "win"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else # إذا خسرت حرب العصابات
		fine=$((RANDOM % 151 + 50)) # حساب الغرامة عشوائيًا
		cash=$((cash - fine)) # خصم الغرامة من المال
		damage=$((RANDOM % 41 + 20)) # حساب الضرر عشوائيًا

		if $body_armor_equipped; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi

		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد خسرت حرب العصابات، وغُرمت %d دولار، وخسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.\n" "$fine" "$damage" "$cash" "$health" # لقد خسرت حرب العصابات، وغُرمت %d دولار، وخسرت %d%% صحة. لديك الآن %d دولار و %d%% صحة.
		play_sfx_mpg "lose"  # تشغيل مؤثر صوتي "lose"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة لسرقة سيارة
carjack() {
	# التحقق مما إذا كان اللاعب يمتلك أي أسلحة
	if (( ${#guns[@]} == 0 )); then # إذا لم يكن لدى اللاعب أسلحة
		# إخطار اللاعب بأنه ليس لديه سلاح
		echo "ليس لديك سلاح، لذلك سيتعين عليك الاعتماد على مهاراتك. سيجعل هذا سرقة السيارة أكثر صعوبة." # ليس لديك سلاح، لذلك سيتعين عليك الاعتماد على مهاراتك. سيجعل هذا سرقة السيارة أكثر صعوبة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		success_chance=$((success_chance - 20))  # تقليل فرصة النجاح عند عدم توفر سلاح
	fi

	# التحقق مما إذا كان اللاعب قد اختار استخدام سلاح
	if (( ${#guns[@]} > 0 )); then # إذا كان اللاعب يمتلك أسلحة
		# سؤال اللاعب عما إذا كان يريد استخدام سلاح
		echo "هل تريد استخدام سلاح؟ (نعم/لا)" # هل تريد استخدام سلاح؟ (نعم/لا)
		read -r use_gun # قراءة إجابة اللاعب

		if [[ "$use_gun" == "y" || "$use_gun" == "Y" ]]; then # إذا اختار اللاعب استخدام سلاح
			# سرد الأسلحة المتاحة
			echo "أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)" # أي سلاح تريد استخدامه؟ (أدخل اسم السلاح)
			echo "الأسلحة المتاحة: ${guns[*]}" # الأسلحة المتاحة: ${guns[*]}
			read -r chosen_gun # قراءة اسم السلاح المختار

			# التحقق مما إذا كان اللاعب يمتلك السلاح المختار
			gun_found=false # السلاح غير موجود (مبدئيًا)
			for gun in "${guns[@]}"; do # تكرار عبر الأسلحة في المخزون
				if [[ "$gun" == "$chosen_gun" ]]; then # إذا تم العثور على السلاح المختار
					gun_found=true # السلاح موجود
					break # الخروج من الحلقة
				fi
			done

			if $gun_found; then # إذا تم العثور على السلاح
				echo "لقد استخدمت $chosen_gun!" # لقد استخدمت $chosen_gun!
				play_sfx_mpg "gun_shot"  # تشغيل مؤثر صوتي "gun_shot"
				local gun_bonus=0 # تهيئة مكافأة السلاح هنا داخل كتلة if $gun_found

				# --- منطق مكافأة السلاح ---
				if [[ -v "gun_attributes[$chosen_gun]" ]]; then # إذا كانت هناك خصائص محددة للسلاح
					eval "${gun_attributes[$chosen_gun]}" # استخراج سلسلة الخصائص
					gun_bonus=$success_bonus # الحصول على مكافأة النجاح
					success_chance=$((success_chance + gun_bonus)) # تطبيق المكافأة على فرصة النجاح
					echo "يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%." # يمنحك $chosen_gun فرصة نجاح إضافية بنسبة +${gun_bonus}%.
				else
					echo "لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج)." # لا توجد خصائص محددة لـ $chosen_gun (هذا خطأ في البرنامج).
				fi
				# --- نهاية منطق مكافأة السلاح ---

			else
				echo "ليس لديك هذا السلاح!" # ليس لديك هذا السلاح!
				# المتابعة بدون سلاح إذا كان السلاح المختار غير موجود
				echo "المتابعة بدون سلاح." # المتابعة بدون سلاح.
				success_chance=$((success_chance - 20))  # تقليل فرصة النجاح بدون سلاح (-20)
			fi
		else
			# إذا اختار اللاعب عدم استخدام سلاح، فالمتابعة بدونه
			echo "المتابعة بدون سلاح." # المتابعة بدون سلاح.
			success_chance=$((success_chance - 20))  # تقليل فرصة النجاح بدون سلاح (-20)
		fi
	fi

	# بدء رسوم متحركة لسرقة السيارة بعد القرار
	carjacking_animation # تشغيل رسوم متحركة لسرقة السيارة
	echo "محاولة سرقة سيارة في $location..." # محاولة سرقة سيارة في $location...
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...

	local loot # الغنائم
	local damage # الضرر
	local fine # الغرامة
	local driving_skill=$((skills["driving"] * 5)) # مهارة القيادة
	local stealth_skill=$((skills["stealth"] * 5)) # مهارة التخفي
	success_chance=$((driving_skill + stealth_skill + success_chance)) # حساب فرصة النجاح

	# الآن حساب فرصة النجاح بعد الأخذ في الاعتبار السلاح
	if (( RANDOM % 100 < success_chance )); then # إذا نجحت سرقة السيارة (بناءً على فرصة النجاح)
		loot=$((RANDOM % 201 + 50)) # حساب الغنائم عشوائيًا
		cash=$((cash + loot)) # إضافة الغنائم إلى المال

		damage=$((RANDOM % 21 + 10)) # حساب الضرر عشوائيًا

		if [[ "$body_armor_equipped" == true ]]; then # إذا كان الدرع الواقي للجسم مجهزًا
			damage=$((damage / 2)) # تقليل الضرر إلى النصف
			echo "درعك الواقي للجسم قلل الضرر!" # درعك الواقي للجسم قلل الضرر!
			body_armor_equipped=false # تعطيل الدرع الواقي للجسم (يستخدم مرة واحدة)
		fi

		health=$((health - damage)) # خصم الضرر من الصحة
		check_health # التحقق من الصحة
		clear_screen # مسح الشاشة
		printf "لقد نجحت في سرقة سيارة وحصلت على %d دولار، لكن خسرت %d%% صحة.\nلديك الآن %d دولار و %d%% صحة.\n" "$loot" "$damage" "$cash" "$health" # لقد نجحت في سرقة سيارة وحصلت على %d دولار، لكن خسرت %d%% صحة.\nلديك الآن %d دولار و %d%% صحة.
		play_sfx_mpg "car_start"  # تشغيل مؤثر صوتي "car_start"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	else # إذا فشلت سرقة السيارة
		fine=$((RANDOM % 76 + 25)) # حساب الغرامة عشوائيًا
		cash=$((cash - fine)) # خصم الغرامة من المال
		clear_screen # مسح الشاشة
		printf "لقد تم القبض عليك وغُرمت %d دولار. لديك الآن %d دولار.\n" "$fine" "$cash" # لقد تم القبض عليك وغُرمت %d دولار. لديك الآن %d دولار.
		play_sfx_mpg "lose"  # تشغيل مؤثر صوتي "lose"
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi
}

# دالة للتعامل مع زيارة المستشفى بعد الموت
hospitalize_player() {
	clear_screen # مسح الشاشة
	echo "لقد تم إدخالك إلى المستشفى ويجري علاجك..." # لقد تم إدخالك إلى المستشفى ويجري علاجك...
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	health=100 # استعادة الصحة إلى 100٪
	clear_screen # مسح الشاشة
	echo "لقد شفيت تمامًا ولكن خسرت 200 دولار للعلاج." # لقد شفيت تمامًا ولكن خسرت 200 دولار للعلاج.
	cash=$((cash - 200)) # خصم 200 دولار من المال
	(( cash < 0 )) && cash=0 # التأكد من أن المال لا يصبح سالبًا
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	clear_screen # مسح الشاشة
}

# دالة لتوظيف عاهرة
hire_hooker() {
	echo "أنت تبحث عن عاهرة في $location..." # أنت تبحث عن عاهرة في $location...
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	local hooker_cost # تكلفة العاهرة
	local health_gain # زيادة الصحة
	local charisma_skill=$(( skills["charisma"] * 2 ))  # مهارة الكاريزما (تؤثر على السعر)
	# التأكد من أن مهارة الكاريزما ضمن نطاق معقول
	(( charisma_skill > 99 )) && charisma_skill=99 # الحد الأقصى للكاريزما هو 99
	# التأكد من أن نطاق RANDOM إيجابي
	local min_cost=$(( 50 - charisma_skill )) # الحد الأدنى للتكلفة
	local max_cost=$(( 101 - charisma_skill )) # الحد الأقصى للتكلفة
	(( min_cost < 1 )) && min_cost=1 # التأكد من أن الحد الأدنى للتكلفة لا يقل عن 1
	(( max_cost <= min_cost )) && max_cost=$(( min_cost + 10 ))  # التأكد من أن النطاق صالح
	hooker_cost=$(( RANDOM % (max_cost - min_cost + 1) + min_cost )) # حساب التكلفة عشوائيًا ضمن النطاق
	# التأكد من وجود حد أدنى للتكلفة
	(( hooker_cost < 10 )) && hooker_cost=10 # التأكد من أن التكلفة لا تقل عن 10
	health_gain=$(( RANDOM % 21 + 10 )) # حساب زيادة الصحة عشوائيًا
	if (( cash >= hooker_cost )); then # إذا كان المال كافيًا
	cash=$(( cash - hooker_cost )) # خصم التكلفة من المال
	health=$(( health + health_gain )) # زيادة الصحة
	(( health > 100 )) && health=100 # التأكد من أن الصحة لا تتجاوز 100٪
	clear_screen # مسح الشاشة
	printf "لقد وظفت عاهرة مقابل %d دولار واكتسبت %d%% صحة.\nلديك الآن %d دولار و %d%% صحة.\n" \
	"$hooker_cost" "$health_gain" "$cash" "$health" # لقد وظفت عاهرة مقابل %d دولار واكتسبت %d%% صحة.\nلديك الآن %d دولار و %d%% صحة.
	play_sfx_mpg "hooker"  # تشغيل مؤثر صوتي "hooker"
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
else
	clear_screen # مسح الشاشة
	echo "ليس لديك مال كافٍ لتوظيف عاهرة." # ليس لديك مال كافٍ لتوظيف عاهرة.
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
	fi

clear_screen # مسح الشاشة
}


# دالة مركزية لمعاملات المخدرات
drug_transaction() {
	local action="$1" # "buy" أو "sell" (شراء أو بيع)
	local drug_name="$2" # اسم المخدر
	local drug_price="$3" # سعر المخدر
	local drug_amount="$4" # كمية المخدر
	local cost income selling_price # التكلفة والدخل وسعر البيع
	local drug_dealer_skill=$((skills["drug_dealer"])) # مهارة تاجر المخدرات

	if [[ "$action" == "buy" ]]; then # إذا كانت العملية شراء
		cost=$((drug_price * drug_amount)) # حساب التكلفة
		if (( cash >= cost )); then # إذا كان المال كافيًا
			drug_transaction_animation # تشغيل رسوم متحركة لمعاملة المخدرات
			cash=$((cash - cost)) # خصم التكلفة من المال
			drugs["$drug_name"]=$((drugs["$drug_name"] + drug_amount)) # زيادة كمية المخدر في المخزون
			printf "لقد اشتريت %s وحدة من %s.\n" "$drug_amount" "$drug_name" # لقد اشتريت %s وحدة من %s.
			play_sfx_mpg "cash_register" # تشغيل مؤثر صوتي "cash_register"
			return 0 # إشارة إلى النجاح
		else
			echo "ليس لديك مال كافٍ لشراء $drug_name." # ليس لديك مال كافٍ لشراء $drug_name.
			return 1 # إشارة إلى الفشل
		fi
	elif [[ "$action" == "sell" ]]; then # إذا كانت العملية بيع
		if [[ -v "drugs[$drug_name]" ]] && (( drugs["$drug_name"] >= drug_amount )); then # إذا كان اللاعب يمتلك كمية كافية من المخدر للبيع
			drug_transaction_animation # تشغيل رسوم متحركة لمعاملة المخدرات

			# تعديل سعر البيع بناءً على المهارة
			local price_modifier=$((drug_dealer_skill * 2)) # مثال: زيادة بنسبة 2٪ لكل نقطة مهارة
			local adjusted_price=$((drug_price + (drug_price * price_modifier / 100))) # حساب السعر المعدل

			income=$((adjusted_price * drug_amount)) # حساب الدخل
			cash=$((cash + income)) # إضافة الدخل إلى المال
			drugs["$drug_name"]=$((drugs["$drug_name"] - drug_amount)) # تقليل كمية المخدر في المخزون

			printf "لقد بعت %s وحدة من %s مقابل %d دولار (معدلة حسب مهارة تجارة المخدرات الخاصة بك).\n" "$drug_amount" "$drug_name" "$income" # لقد بعت %s وحدة من %s مقابل %d دولار (معدلة حسب مهارة تجارة المخدرات الخاصة بك).
			play_sfx_mpg "cash_register" # تشغيل مؤثر صوتي "cash_register"
			# زيادة مهارة تاجر المخدرات
			skills["drug_dealer"]=$((drug_dealer_skill + 1)) # زيادة بسيطة للمهارة
			echo "مهارة تجارة المخدرات الخاصة بك قد زادت!" # مهارة تجارة المخدرات الخاصة بك قد زادت!
			return 0 # إشارة إلى النجاح
		else
			echo "ليس لديك كمية كافية من $drug_name للبيع." # ليس لديك كمية كافية من $drug_name للبيع.
			return 1 # إشارة إلى الفشل
		fi
	else
		echo "إجراء غير صالح: $action" # إجراء غير صالح: $action
		return 1 # إشارة إلى الفشل
	fi

}

buy_drugs() {
	local drug_choice drug_amount # اختيار المخدر والكمية

	clear_screen # مسح الشاشة
	echo "تاجر المخدرات - اختر مخدرًا للشراء:" # تاجر المخدرات - اختر مخدرًا للشراء:
	echo "1. حشيش (10$/الوحدة)" # 1. حشيش (10$/الوحدة)
	echo "2. كوكايين (50$/الوحدة)" # 2. كوكايين (50$/الوحدة)
	echo "3. هيروين (100$/الوحدة)" # 3. هيروين (100$/الوحدة)
	echo "4. ميث (75$/الوحدة)" # 4. ميث (75$/الوحدة)
	echo "5. العودة إلى القائمة الرئيسية" # 5. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك (رقم): " drug_choice # أدخل اختيارك (رقم):

	[[ ! "$drug_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم من القائمة." # إدخال غير صالح. يرجى إدخال رقم من القائمة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}
	read -r -p "أدخل الكمية التي تريد شرائها: " drug_amount # أدخل الكمية التي تريد شرائها:
	[[ ! "$drug_amount" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}
	case "$drug_choice" in # بناءً على اختيار المخدر
		1) drug_transaction "buy" "حشيش" 10 "$drug_amount";; # شراء حشيش
		2) drug_transaction "buy" "كوكايين" 50 "$drug_amount";; # شراء كوكايين
		3) drug_transaction "buy" "هيروين" 100 "$drug_amount";; # شراء هيروين
		4) drug_transaction "buy" "ميث" 75 "$drug_amount";; # شراء ميث
		5) clear_screen; return;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح."; return;; # اختيار غير صالح.
	esac
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
}

sell_drugs() {
	local drug_choice drug_amount # اختيار المخدر والكمية
	clear_screen # مسح الشاشة
	echo "تاجر المخدرات - اختر مخدرًا للبيع:" # تاجر المخدرات - اختر مخدرًا للبيع:
	echo "1. حشيش" # 1. حشيش
	echo "2. كوكايين" # 2. كوكايين
	echo "3. هيروين" # 3. هيروين
	echo "4. ميث" # 4. ميث
	echo "5. العودة إلى القائمة الرئيسية" # 5. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك (رقم): " drug_choice # أدخل اختيارك (رقم):
	[[ ! "$drug_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم من القائمة." # إدخال غير صالح. يرجى إدخال رقم من القائمة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}
	read -r -p "أدخل الكمية التي تريد بيعها: " drug_amount # أدخل الكمية التي تريد بيعها:
	[[ ! "$drug_amount" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		return
	}
	case "$drug_choice" in # بناءً على اختيار المخدر
		1) drug_transaction "sell" "حشيش" 15 "$drug_amount";; # بيع حشيش
		2) drug_transaction "sell" "كوكايين" 75 "$drug_amount";; # بيع كوكايين
		3) drug_transaction "sell" "هيروين" 150 "$drug_amount";; # بيع هيروين
		4) drug_transaction "sell" "ميث" 100 "$drug_amount";; # بيع ميث
		5) clear_screen; return;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح."; return;; # اختيار غير صالح.
	esac
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
}

# دالة لتشغيل الموسيقى
play_music() {
	local music_files=( # قائمة ملفات الموسيقى
		"music/platforma.mp3"
		"music/metropolis.mp3"
		"music/discovery.mp3"
		"music/search_for_joe.mp3"
		"music/the_loading_screen.mp3"
		"music/doom.mp3"
		"music/Jal.mp3"
	)

	while true; do # حلقة مستمرة لتشغيل الموسيقى
		clear_screen # مسح الشاشة
		echo "اختر أغنية لتشغيلها:" # اختر أغنية لتشغيلها:
		for i in "${!music_files[@]}"; do # تكرار عبر ملفات الموسيقى
			printf "%d. %s\n" $((i + 1)) "$(basename "${music_files[$i]}")" # طباعة رقم واسم الأغنية
		done
		echo "اضغط q لإيقاف الموسيقى" # اضغط q لإيقاف الموسيقى
		printf "%d. العودة إلى القائمة الرئيسية\n" $(( ${#music_files[@]} + 1 )) # طباعة خيار العودة إلى القائمة الرئيسية
		read -r music_choice # قراءة اختيار المستخدم
		if ! [[ "$music_choice" =~ ^[0-9]+$ ]]; then # إذا لم يكن الإدخال رقمًا
			echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
			sleep 2 # الانتظار لمدة 2 ثانية
			continue # العودة إلى قائمة تشغيل الموسيقى
		fi
		if (( music_choice <= ${#music_files[@]} )); then # إذا اختار المستخدم أغنية
			local selected_track="${music_files[$((music_choice - 1))]}" # الحصول على مسار الأغنية المحددة
			if [[ -f "$selected_track" ]]; then # إذا كان ملف الأغنية موجودًا
				echo "جاري التشغيل: $(basename "$selected_track")" # جاري التشغيل: اسم الأغنية
				mpg123 -q "$selected_track" # تشغيل الأغنية بصمت
			else
				echo "خطأ: ملف الموسيقى '$selected_track' غير موجود." # خطأ: ملف الموسيقى '$selected_track' غير موجود.
				sleep 2 # الانتظار لمدة 2 ثانية
			fi
		elif (( music_choice == ${#music_files[@]} + 1 )); then # إذا اختار المستخدم العودة إلى القائمة الرئيسية
			pkill mpg123 # قتل أي عملية mpg123 قيد التشغيل
			clear_screen # مسح الشاشة
			break  # الخروج من قائمة تشغيل الموسيقى
		else
			echo "اختيار غير صالح." # اختيار غير صالح.
			sleep 2 # الانتظار لمدة 2 ثانية
		fi
	done
}

# حفظ حالة اللعبة في ملف
save_game() {
	echo "$player_name" > "$SAVE_DIR/player_name.sav" # حفظ اسم اللاعب
	echo "$location" > "$SAVE_DIR/location.sav" # حفظ الموقع
	echo "$cash" > "$SAVE_DIR/cash.sav" # حفظ المال
	echo "$health" > "$SAVE_DIR/health.sav" # حفظ الصحة
	printf '%s\n' "${guns[@]}" > "$SAVE_DIR/guns.sav" # حفظ الأسلحة
	printf '%s\n' "${items[@]}" > "$SAVE_DIR/items.sav" # حفظ العناصر
	> "$SAVE_DIR/drugs.sav" # مسح ملف المخدرات أولاً
	for key in "${!drugs[@]}"; do # تكرار عبر المخدرات في القاموس الترابطي
		printf "%s %s\n" "$key" "${drugs[$key]}" >> "$SAVE_DIR/drugs.sav" # حفظ المخدرات والكميات
	done
	echo "$body_armor_equipped" > "$SAVE_DIR/body_armor_equipped.sav" # حفظ حالة الدرع الواقي للجسم

	# حفظ المهارات
	> "$SAVE_DIR/skills.sav" # مسح الملف أولاً
	for key in "${!skills[@]}"; do # تكرار عبر المهارات في القاموس الترابطي
		printf "%s %s\n" "$key" "${skills[$key]}" >> "$SAVE_DIR/skills.sav" # حفظ المهارات والمستويات
	done

	echo "تم حفظ اللعبة بنجاح." # تم حفظ اللعبة بنجاح.
	read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
}

# تحميل حالة اللعبة من ملف
load_game() {
	local IFS=$'\n' # تغيير فاصل الحقول إلى سطر جديد
	if [[ -f "$SAVE_DIR/player_name.sav" && -f "$SAVE_DIR/location.sav" && -f "$SAVE_DIR/cash.sav" && -f "$SAVE_DIR/health.sav" && -f "$SAVE_DIR/guns.sav" && -f "$SAVE_DIR/items.sav" && -f "$SAVE_DIR/body_armor_equipped.sav" && -f "$SAVE_DIR/skills.sav" ]]; then # التحقق من وجود جميع ملفات الحفظ
		read -r player_name < "$SAVE_DIR/player_name.sav" # تحميل اسم اللاعب
		read -r location < "$SAVE_DIR/location.sav" # تحميل الموقع
		read -r cash < "$SAVE_DIR/cash.sav" # تحميل المال
		read -r health < "$SAVE_DIR/health.sav" # تحميل الصحة
		read -r -a guns < "$SAVE_DIR/guns.sav" # تحميل الأسلحة
		read -r -a items < "$SAVE_DIR/items.sav" # تحميل العناصر
		read -r body_armor_equipped < "$SAVE_DIR/body_armor_equipped.sav" # تحميل حالة الدرع الواقي للجسم
		declare -A drugs # تهيئة قاموس ترابطي للمخدرات
		while IFS=$'\n' read -r line; do # قراءة ملف المخدرات سطرًا بسطر
			if [[ -n "$line" ]]; then # إذا كان السطر غير فارغ
				IFS=$' ' read -r key value <<< "$line" # تقسيم السطر إلى مفتاح وقيمة
				drugs["$key"]="$value" # تحميل المخدرات والكميات
			fi
		done < "$SAVE_DIR/drugs.sav"

		# تحميل المهارات
		declare -A skills # تهيئة قاموس ترابطي للمهارات
		while IFS=$'\n' read -r line; do # قراءة ملف المهارات سطرًا بسطر
			if [[ -n "$line" ]]; then # إذا كان السطر غير فارغ
				IFS=$' ' read -r key value <<< "$line" # تقسيم السطر إلى مفتاح وقيمة
				skills["$key"]="$value" # تحميل المهارات والمستويات
			fi
		done < "$SAVE_DIR/skills.sav"

		echo "تم تحميل اللعبة بنجاح." # تم تحميل اللعبة بنجاح.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		IFS=$' \t\n' # استعادة فاصل الحقول الافتراضي
		return 0 # إشارة إلى التحميل الناجح
	else
		echo "لم يتم العثور على لعبة محفوظة." # لم يتم العثور على لعبة محفوظة.
		read -r -p "اضغط مفتاح الإدخال للمتابعة..." # اضغط مفتاح الإدخال للمتابعة...
		IFS=$' \t\n' # استعادة فاصل الحقول الافتراضي
		return 1 # إشارة إلى فشل التحميل
	fi
}

# --- 4. تهيئة اللعبة وحلقتها ---

# دالة لتهيئة متغيرات اللعبة
Game_variables() {
	clear_screen # مسح الشاشة
	read -r -p "أدخل اسم اللاعب الخاص بك: " player_name # أدخل اسم اللاعب الخاص بك:
	play_sfx_mpg "new_game" # تشغيل مؤثر صوتي "new_game"
	location="Los Santos" # الموقع الافتراضي: لوس سانتوس
	cash=500 # المال الأولي: 500 دولار
	health=100 # الصحة الأولية: 100٪
	guns=() # تهيئة قائمة الأسلحة فارغة
	items=() # تهيئة قائمة العناصر فارغة
	declare -A drugs # تهيئة قاموس ترابطي للمخدرات
	drugs=( ["حشيش"]=0 ["كوكايين"]=0 ["هيروين"]=0 ["ميث"]=0 ) # تهيئة المخدرات بكميات صفرية
	# تهيئة المهارات
	declare -A skills # تهيئة قاموس ترابطي للمهارات
	skills=( ["driving"]=1 ["strength"]=1 ["charisma"]=1 ["stealth"]=1 ["drug_dealer"]=1 ) # تهيئة المهارات بمستويات أولية
	clear_screen # مسح الشاشة
}

# دالة لإزالة ملفات الحفظ
remove_save_files() {
	rm -f "$SAVE_DIR/player_name.sav" # إزالة ملف حفظ اسم اللاعب
	rm -f "$SAVE_DIR/location.sav" # إزالة ملف حفظ الموقع
	rm -f "$SAVE_DIR/cash.sav" # إزالة ملف حفظ المال
	rm -f "$SAVE_DIR/health.sav" # إزالة ملف حفظ الصحة
	rm -f "$SAVE_DIR/guns.sav" # إزالة ملف حفظ الأسلحة
	rm -f "$SAVE_DIR/items.sav" # إزالة ملف حفظ العناصر
	rm -f "$SAVE_DIR/drugs.sav" # إزالة ملف حفظ المخدرات
	rm -f "$SAVE_DIR/body_armor_equipped.sav" # إزالة ملف حفظ حالة الدرع الواقي للجسم
	rm -f "$SAVE_DIR/skills.sav" # إزالة ملف حفظ المهارات

	if [[ ! -d "$SAVE_DIR" ]]; then # إذا لم يكن دليل الحفظ موجودًا
		echo "لم يتم العثور على لعبة محفوظة." # لم يتم العثور على لعبة محفوظة.
	else
		echo "تم حذف الحفظ القديم!" # تم حذف الحفظ القديم!
	fi
}

# قائمة اللعبة الأولية
while true; do # حلقة مستمرة للقائمة الأولية
	clear_screen # مسح الشاشة
	echo "مرحبًا بك في باش ثيفت أوتو" # مرحبًا بك في باش ثيفت أوتو
	echo "اختر خيارًا:" # اختر خيارًا:
	echo "1. لعبة جديدة" # 1. لعبة جديدة
	echo "2. تحميل لعبة" # 2. تحميل لعبة
	echo "3. خروج من اللعبة" # 3. خروج من اللعبة
	read -r -p "أدخل اختيارك: " initial_choice # أدخل اختيارك:
	[[ ! "$initial_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		sleep 2 # الانتظار لمدة 2 ثانية
		continue # العودة إلى القائمة الأولية
	}
	case "$initial_choice" in # بناءً على اختيار المستخدم
		1) remove_save_files; Game_variables; break;; # لعبة جديدة
		2) if [[ -d "$SAVE_DIR" ]] && load_game; then break; else continue; fi;; # تحميل لعبة
		3) exit;; # خروج من اللعبة
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac
done

while true; do # حلقة مستمرة للعبة الرئيسية
clear_screen # مسح الشاشة
echo "اختر إجراءً:" # اختر إجراءً:
echo "1. السفر إلى ولاية أخرى" # 1. السفر إلى ولاية أخرى
echo "2. شراء أسلحة" # 2. شراء أسلحة
echo "3. عرض المخزون" # 3. عرض المخزون
echo "4. العمل (كسب المال)" # 4. العمل (كسب المال)
echo "5. العمل (نشاط إجرامي)" # 5. العمل (نشاط إجرامي)
echo "6. شراء مخدرات" # 6. شراء مخدرات
echo "7. بيع مخدرات" # 7. بيع مخدرات
echo "8. توظيف عاهرة" # 8. توظيف عاهرة
echo "9. زيارة المستشفى" # 9. زيارة المستشفى
echo "10. خروج من اللعبة" # 10. خروج من اللعبة
echo "11. حفظ اللعبة" # 11. حفظ اللعبة
echo "12. تحميل لعبة" # 12. تحميل لعبة
echo "13. تشغيل الموسيقى" # 13. تشغيل الموسيقى
echo "14. حول" # 14. حول
read -r -p "أدخل اختيارك: " choice # أدخل اختيارك:
[[ ! "$choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
	echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
	sleep 2 # الانتظار لمدة 2 ثانية
	continue # العودة إلى القائمة الرئيسية
}
case "$choice" in # بناءً على اختيار المستخدم
	1) clear # مسح الشاشة
	echo "اختر ولاية للسفر إليها:" # اختر ولاية للسفر إليها:
	echo "1. لوس سانتوس (50$)" # 1. لوس سانتوس (50$)
	echo "2. سان فييرو (75$)" # 2. سان فييرو (75$)
	echo "3. لاس فينتوراس (100$)" # 3. لاس فينتوراس (100$)
	echo "4. فايس سيتي (150$)" # 4. فايس سيتي (150$)
	echo "5. ليبرتي سيتي (200$)" # 5. ليبرتي سيتي (200$)
	echo "6. العودة إلى القائمة الرئيسية" # 6. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك: " city_choice # أدخل اختيارك:
	[[ ! "$city_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		sleep 2 # الانتظار لمدة 2 ثانية
		continue # العودة إلى قائمة السفر
	}
	case "$city_choice" in # بناءً على اختيار المدينة
		1) travel_to 50 "Los Santos";; # السفر إلى لوس سانتوس
		2) travel_to 75 "San Fierro";; # السفر إلى سان فييرو
		3) travel_to 100 "Las Venturas";; # السفر إلى لاس فينتوراس
		4) travel_to 150 "Vice City";; # السفر إلى فايس سيتي
		5) travel_to 200 "Liberty City";; # السفر إلى ليبرتي سيتي
		6) clear_screen;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac;;
	2) buy_guns;; # شراء أسلحة
	3) show_inventory;; # عرض المخزون
	4) clear # مسح الشاشة
	echo "اختر وظيفة:" # اختر وظيفة:
	echo "1. سائق تاكسي" # 1. سائق تاكسي
	echo "2. سائق توصيل" # 2. سائق توصيل
	echo "3. ميكانيكي" # 3. ميكانيكي
	echo "4. حارس أمن" # 4. حارس أمن
	echo "5. فنان شارع" # 5. فنان شارع
	echo "6. العودة إلى القائمة الرئيسية" # 6. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك: " job_choice # أدخل اختيارك:
	[[ ! "$job_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		sleep 2 # الانتظار لمدة 2 ثانية
		continue # العودة إلى قائمة الوظائف
	}
	case "$job_choice" in # بناءً على اختيار الوظيفة
		1) work_job "taxi";; # وظيفة سائق تاكسي
		2) work_job "delivery";; # وظيفة سائق توصيل
		3) work_job "mechanic";; # وظيفة ميكانيكي
		4) work_job "security";; # وظيفة حارس أمن
		5) work_job "performer";; # وظيفة فنان شارع
		6) clear_screen;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac;;
	5) clear # مسح الشاشة
	echo "اختر نشاطًا إجراميًا:" # اختر نشاطًا إجراميًا:
	echo "1. عملية سطو" # 1. عملية سطو
	echo "2. حرب عصابات" # 2. حرب عصابات
	echo "3. سرقة سيارة" # 3. سرقة سيارة
	echo "4. سرقة متجر" # 4. سرقة متجر
    echo "5. سباق الشوارع" # 5. سباق الشوارع
	echo "6. العودة إلى القائمة الرئيسية" # 6. العودة إلى القائمة الرئيسية
	read -r -p "أدخل اختيارك: " criminal_choice # أدخل اختيارك:
	[[ ! "$criminal_choice" =~ ^[0-9]+$ ]] && { # إذا لم يكن الإدخال رقمًا
		echo "إدخال غير صالح. يرجى إدخال رقم." # إدخال غير صالح. يرجى إدخال رقم.
		sleep 2 # الانتظار لمدة 2 ثانية
		continue # العودة إلى قائمة الأنشطة الإجرامية
	}
	case "$criminal_choice" in # بناءً على اختيار النشاط الإجرامي
		1) heist;; # عملية سطو
		2) gang_war;; # حرب عصابات
		3) carjack;; # سرقة سيارة
		4) rob_store;; # سرقة متجر
		5) street_race;; # سباق الشوارع
		6) clear_screen;; # مسح الشاشة (العودة إلى القائمة الرئيسية)
		*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac;;
	6) buy_drugs;; # شراء مخدرات
	7) sell_drugs;; # بيع مخدرات
	8) hire_hooker;; # توظيف عاهرة
	9) visit_hospital;; # زيارة المستشفى
	10) exit;; # خروج من اللعبة
	11) save_game;; # حفظ اللعبة
	12) load_game;; # تحميل لعبة
	13) play_music;; # تشغيل الموسيقى
	14) about_music_sfx;; # حول
	*) echo "اختيار غير صالح.";; # اختيار غير صالح.
	esac
done
